# Generated by Django 3.0.4 on 2020-03-27 07:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('idprovider', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('idprovider_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='idprovider.IdProvider')),
                ('legacy_id', models.CharField(blank=True, max_length=300)),
                ('written_name', models.CharField(blank=True, max_length=300, verbose_name='Name')),
                ('authority_url', models.CharField(blank=True, max_length=300)),
                ('alt_names', models.TextField(blank=True, help_text="Im Falle mehrerer Einträge, diese bitte mit ';' trennen", verbose_name='Alternative Bezeichnungen')),
                ('abbreviation', models.CharField(blank=True, max_length=300, verbose_name='Abkürzung')),
                ('comment', models.TextField(blank=True, help_text='provide some', null=True, verbose_name='Anmerkung, Kommentar')),
                ('institution_type', models.CharField(blank=True, choices=[('Partei', 'Partei'), ('Archiv', 'Archiv'), ('Sonstiges', 'Sonstiges')], default='Sonstiges', help_text='Partei, Archiv, sonstiges', max_length=300, verbose_name='Art der Institution')),
            ],
            bases=('idprovider.idprovider',),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('idprovider_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='idprovider.IdProvider')),
                ('name', models.CharField(blank=True, help_text='Normalized name', max_length=250)),
                ('alt_names', models.TextField(blank=True, help_text="Im Falle mehrerer Einträge, diese bitte mit ';' trennen", verbose_name='Alternative Bezeichnungen')),
                ('geonames_id', models.CharField(blank=True, help_text='z.B.: http://www.geonames.org/2773493/bad-kreuzen.html', max_length=500, verbose_name='Geonames-ID')),
                ('lat', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('place_type', models.CharField(blank=True, choices=[('city', 'city'), ('country', 'country')], max_length=50, null=True)),
                ('part_of', models.ForeignKey(blank=True, help_text='A place (country) this place is part of.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='has_child', to='entities.Place')),
            ],
            bases=('idprovider.idprovider',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('idprovider_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='idprovider.IdProvider')),
                ('legacy_id', models.CharField(blank=True, max_length=300)),
                ('written_name', models.CharField(blank=True, max_length=300)),
                ('forename', models.CharField(blank=True, max_length=300, verbose_name='Vorname')),
                ('name', models.CharField(blank=True, max_length=300, verbose_name='Nachname')),
                ('acad_title', models.CharField(blank=True, max_length=300, verbose_name='Akademische Titel')),
                ('alt_names', models.TextField(blank=True, help_text="Im Falle mehrerer Einträge, diese bitte mit ';' trennen", verbose_name='Alternative Bezeichnungen')),
                ('date_of_birth', models.DateField(blank=True, help_text='YYYY-MM-DD', null=True, verbose_name='Geburtsdatum')),
                ('date_of_birth_written', models.CharField(blank=True, max_length=300, verbose_name='ungefähres Geburtsdatum')),
                ('date_of_death', models.DateField(blank=True, help_text='YYYY-MM-DD', null=True, verbose_name='Todesdatum')),
                ('date_of_death_written', models.CharField(blank=True, max_length=300, verbose_name='ungefähres Sterbedatum')),
                ('authority_url', models.CharField(blank=True, help_text='https://portal.dnb.de/ oder https://de.wikipedia.org/', max_length=300, verbose_name='GND-URL (oder Wikipedia)')),
                ('comment', models.TextField(blank=True, null=True)),
                ('biography', models.TextField(blank=True, help_text='Weitere biographische Anmerkungen zur Person', null=True, verbose_name='biographische Anmerkungen')),
                ('funktion', models.TextField(blank=True, help_text='Funktionen, Tätigkeiten, Ämter', null=True, verbose_name='Funktion')),
                ('quelle', models.TextField(blank=True, help_text='Quellen', null=True, verbose_name='Quellen')),
                ('type_of_person', models.CharField(blank=True, help_text='provide some', max_length=300, verbose_name='Art der Person')),
                ('belongs_to_institution', models.ManyToManyField(blank=True, related_name='has_member', to='entities.Institution')),
                ('belongs_to_party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='has_party_member', to='entities.Institution')),
                ('place_of_birth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='is_birthplace', to='entities.Place', verbose_name='Geburtsort')),
                ('place_of_death', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='is_deathplace', to='entities.Place', verbose_name='Todesort')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=('idprovider.idprovider',),
        ),
        migrations.AddField(
            model_name='institution',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='entities.Place', verbose_name='Hauptstandort'),
        ),
        migrations.AddField(
            model_name='institution',
            name='parent_institution',
            field=models.ForeignKey(blank=True, help_text='provide some', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children_institutions', to='entities.Institution', verbose_name='Teil von Institution'),
        ),
    ]
