# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-03-12 10:24
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('review', models.BooleanField(default=False, help_text='Should be set to True, if the data record holds up quality standards.')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_date_written', models.CharField(blank=True, help_text='Please enter a date (DD).(MM).YYYY', max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='invalide_date', message='Please enter a valide date: (DD).(MM).YYYY', regex=re.compile('^([0-9]{1,2}\\.[0-9]{1,2}\\.)?[0-9]{4}$', 32))], verbose_name='Start')),
                ('end_date_written', models.CharField(blank=True, help_text='Please enter a date (DD).(MM).YYYY', max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='invalide_date', message='Please enter a valide date: (DD).(MM).YYYY', regex=re.compile('^([0-9]{1,2}\\.[0-9]{1,2}\\.)?[0-9]{4}$', 32))], verbose_name='End')),
                ('note', models.TextField(blank=True, null=True)),
                ('homepage', models.URLField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('review', models.BooleanField(default=False, help_text='Should be set to True, if the data record holds up quality standards.')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_date_written', models.CharField(blank=True, help_text='Please enter a date (DD).(MM).YYYY', max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='invalide_date', message='Please enter a valide date: (DD).(MM).YYYY', regex=re.compile('^([0-9]{1,2}\\.[0-9]{1,2}\\.)?[0-9]{4}$', 32))], verbose_name='Start')),
                ('end_date_written', models.CharField(blank=True, help_text='Please enter a date (DD).(MM).YYYY', max_length=255, null=True, validators=[django.core.validators.RegexValidator(code='invalide_date', message='Please enter a valide date: (DD).(MM).YYYY', regex=re.compile('^([0-9]{1,2}\\.[0-9]{1,2}\\.)?[0-9]{4}$', 32))], verbose_name='End')),
                ('note', models.TextField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, help_text='The personsÂ´s forename. In case of more then one name...', max_length=255, null=True)),
                ('gender', models.CharField(blank=True, choices=[('female', 'female'), ('male', 'male')], max_length=15)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
